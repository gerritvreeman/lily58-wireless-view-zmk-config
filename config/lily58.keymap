/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/* 0	1	2	3	4	5			6	7	8	9	10	11 */
/* 12	13	14	15	16	17			18	19	20	21	22	23 */
/* 24	25	26	27	28	29			30	31	32	33	34	35 */
/* 36	37	38	39	40	41	42	43	44	45	46	47	48	49 */
/* 			50	51	52	53	54	55	56	57 */

#define LH_KEYS <  0  1  2  3  4  5 \
                  12 13 14 15 16 17 \
                  24 25 26 27 28 29 \
                  36 37 38 39 40 41 42 \
                           50 51 52 53 >

#define RH_KEYS <     6  7  8  9 10 11 \
                     18 19 20 21 22 23 \
                     30 31 32 33 34 35 \
                  43 44 45 46 47 48 49 \
                  54 55 56 57 >

/* ───── home-row macros ───── */
#define HM_A    &hml LSFT A
#define HM_S    &hml LCTL S
#define HM_D    &hml LALT D
#define HM_F    &hml LGUI F
#define HM_1    &hml LSFT 1
#define HM_2    &hml LCTL 2
#define HM_3    &hml LALT 3
#define HM_4    &hml LGUI 4

#define HM_J    &hmr RGUI J
#define HM_K    &hmr RALT K
#define HM_L    &hmr RCTL L
#define HM_SEMI &hmr RSFT SEMI
#define HM_7    &hmr RGUI 7
#define HM_8    &hmr RALT 8
#define HM_9    &hmr RCTL 9
#define HM_0    &hmr RSFT 0

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: home_row_mod_left {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          require-prior-idle-ms = <150>;
          tapping-term-ms       = <200>;
          quick-tap-ms          = <0>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = RH_KEYS;
          hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          require-prior-idle-ms = <150>;
          tapping-term-ms       = <200>;
          quick-tap-ms          = <0>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = LH_KEYS;
          hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4    &kp N5                         &kp N6   &kp N7    &kp N8     &kp N9    &kp N0   &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E    &kp R     &kp T                          &kp Y    &kp U     &kp I      &kp O     &kp P    &kp EQUAL
&kp ESC    HM_A    HM_S    HM_D     HM_F      &kp G                          &kp H    HM_J      HM_K       HM_L      HM_SEMI  &kp SQT
&none      &kp Z   &kp X   &kp C    &kp V     &kp B    &none      &none      &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &none
                           &mo 1    &kp BSPC  &kp RET  &kp SPACE  &kp SPACE  &kp RET  &kp DEL   &mo 1
            >;
        };

        number_symbol_layer {
            display-name = "NumSym";
            bindings = <
&trans     &trans    &trans  &trans    &trans    &trans                     &trans     &trans    &trans    &trans    &trans    &trans
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp UNDER
&kp GRAVE  HM_1      HM_2    HM_3      HM_4      &kp N5                     &kp N6     HM_7      HM_8      HM_9      HM_0      &kp MINUS
&trans     &trans    &trans  &trans    &trans    &trans     &trans  &trans  &trans     &trans    &trans    &kp LBKT  &kp RBKT  &trans
                             &trans    &trans    &trans     &trans  &trans  &trans     &trans    &trans
            >;
        };

/*         symbol_layer { */
/*             display-name = "Symbols"; */
/*             bindings = < */
/* &trans     &trans    &trans  &trans    &trans    &trans                     &trans     &trans    &trans    &trans    &trans    &trans */
/* &trans     &trans    &trans  &trans    &trans    &trans                     &trans     &trans    &trans    &kp LBKT  &kp RBKT  &trans */
/* &kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp UNDER */
/* &trans     &trans    &trans  &trans    &trans    &trans     &trans  &trans  &trans     &trans    &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE */
/*                              &trans    &trans    &trans     &trans  &trans  &trans     &trans    &trans */
/*             >; */
/*         }; */
/*         default_layer { */
/*             display-name = "Base"; */
/*             bindings = < */
/* &kp ESC  &kp N1  &kp N2  &kp N3             &kp N4  &kp N5                                   &kp N6        &kp N7       &kp N8         &kp N9   &kp N0      &kp MINUS */
/* &kp TAB  &kp Q   &kp W   &c_e_to_gui_right  &kp R   &kp T                                    &kp Y         &kp U        &c_i_to_tab    &kp O    &c_p_to_up  &kp EQUAL */
/* &trans   HM_A    HM_S    HM_D               HM_F    &kp G                                    &c_h_to_bspc  HM_J         HM_K           HM_L     HM_SEMI     &kp SQT */
/* &trans   &kp Z   &kp X   &kp C              &kp V   &c_b_to_left  &c_lbkt_to_esc  &kp RBKT   &c_n_to_down  &c_m_to_ret  &kp COMMA      &kp DOT  &kp FSLH    &trans */
/*                          &kp BSPC           &mo 2   &kp RET       &kp SPACE       &kp SPACE  &kp RET       &mo 1        &kp DEL */
/*             >; */
/*         }; */
/*         raise_layer { */
/*             display-name = "Raise"; */
/*             bindings = < */
/* &trans &trans &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans                     &trans     &trans      &trans       &trans     &trans           &trans */
/* &trans &trans &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans                     &mkp MB4   &kp KP_N7   &kp KP_N8    &kp KP_N9  &kp KP_DIVIDE    &trans */
/* &trans &trans &kp F4      &kp F5        &kp F6        &trans                     &mkp MB3   &kp KP_N4   &kp KP_N5    &kp KP_N6  &kp KP_MULTIPLY  &trans */
/* &trans &trans &kp F1      &kp F2        &kp F3        &trans  &trans    &mkp MB1 &mkp MB2   &kp KP_N1   &kp KP_N2    &kp KP_N3  &kp KP_MINUS     &trans */
/*                           &trans        &trans        &trans  &trans    &trans   &kp KP_N0  &kp KP_DOT  &kp KP_PLUS */
/*             >; */
/*         }; */
/*         test_layer { */
/*             display-name = "Base"; */
/*             bindings = < */
/* &kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                        &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS */
/* &kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                         &kp Y   &kp U     &kp I      &kp O    &kp P     &kp EQUAL */
/* &kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                         &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp SQT */
/* &kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT   &kp RBKT   &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT */
/*                            &kp LALT  &kp LGUI  &mo 2   &kp SPACE  &kp RET    &mo 1   &kp RGUI  &kp RALT */
/*             >; */
/*         }; */
/*         blank_layer { */
/*             display-name = "Blank"; */
/*             bindings = < */
/* &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans */
/* &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans */
/*                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans */
/*             >; */
/*         }; */

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
