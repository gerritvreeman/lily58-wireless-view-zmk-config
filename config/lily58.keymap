#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/* 0	1	2	3	4	5			6	7	8	9	10	11 */
/* 12	13	14	15	16	17			18	19	20	21	22	23 */
/* 24	25	26	27	28	29			30	31	32	33	34	35 */
/* 36	37	38	39	40	41	42	43	44	45	46	47	48	49 */
/* 			50	51	52	53	54	55	56	57 */

#define LH_KEYS  0  1  2  3  4  5 \
                12 13 14 15 16 17 \
                24 25 26 27 28 29 \
                36 37 38 39 40 41 42

#define RH_KEYS     6  7  8  9 10 11 \
                   18 19 20 21 22 23 \
                   30 31 32 33 34 35 \
                43 44 45 46 47 48 49

#define T_KEYS 50 51 52 53 54 55 56 57

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: home_row_mod_left {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          require-prior-idle-ms = <125>;
          tapping-term-ms       = <225>;
          quick-tap-ms          = <175>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = <RH_KEYS T_KEYS>;
          hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          require-prior-idle-ms = <125>;
          tapping-term-ms       = <225>;
          quick-tap-ms          = <175>;
          bindings = <&kp>, <&kp>;
          hold-trigger-key-positions = <LH_KEYS T_KEYS>;
          hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            display-name = "Base";
            bindings = <
&kp GRAVE &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                        &kp N6      &kp N7      &kp N8      &kp N9      &kp N0         &kp MINUS
&kp TAB   &kp Q       &kp W       &kp E       &kp R       &kp T                         &kp Y       &kp U       &kp I       &kp O       &kp P          &kp EQUAL
&kp ESC   &hml LSFT A &hml LCTL S &hml LALT D &hml LGUI F &kp G                         &kp H       &hmr RGUI J &hmr RALT K &hmr RCTL L &hmr RSFT SEMI &kp SQT
&mo 2     &kp Z       &kp X       &kp C       &kp V       &kp B       &none    &none    &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH       &kp BSLH
                                  &kp BSPC    &kp RET     &lt 1 SPACE &kp LSFT &kp RSFT &lt 1 SPACE &kp RET     &kp BSPC
            >;
        };

        numpad_symbol_layer {
            display-name = "NumSym";
            bindings = <
&kp F1 &kp F2 &kp F3 &kp F4         &kp F5         &kp F6                &kp F7   &kp F8       &kp F9       &kp F10      &kp F11    &kp F12
&trans &trans &trans &kp LPAR       &kp RPAR       &trans                &kp FSLH &kp N7       &kp N8       &kp N9       &kp MINUS  &trans
&trans &trans &trans &hml LALT LBKT &hml LGUI RBKT &trans                &kp STAR &hmr RGUI N4 &hmr RALT N5 &hmr RCTL N6 &kp PLUS   &trans
&trans &trans &trans &kp LBRC       &kp RBRC       &trans &trans &trans  &trans   &kp N1       &kp N2       &kp N3       &trans     &trans
                     &trans         &trans         &trans &trans &trans  &kp N0   &kp DOT      trans
            >;
        };

        functions_layer {
            display-name = "Functions";
            bindings = <
&bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &bt BT_CLR                   &trans     &trans   &trans     &trans     &trans       &trans
&kp C_BRI_DN &kp C_BRI_UP &trans       &trans       &trans       &trans                       &kp C_PREV &kp C_PP &kp C_NEXT &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP
&trans       &trans       &trans       &trans       &trans       &trans                       &kp LEFT   &kp DOWN &kp UP     &kp RIGHT  &trans       &trans
&trans       &trans       &trans       &trans       &trans       &trans     &trans   &trans   &trans     &trans   &trans     &trans     &trans       &trans
                                       &trans       &trans       &trans     &kp C_PP &kp C_PP &trans     &trans   &trans
            >;
        };

        transparent_layer {
            display-name = "Transparent";
            bindings = <
&trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                     &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
